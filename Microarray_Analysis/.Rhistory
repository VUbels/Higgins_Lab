contrast_formula <- paste0(EXP_column, "-", WT_column)
contrast.matrix <- makeContrasts(contrast_formula, levels=design)
fit2 <- contrasts.fit(fit, contrast.matrix)
fit2 <- eBayes(fit2, trend = T, robust = T)
topTable <- topTable(fit2, coef=1, adjust="none", number = 25000)
results <- decideTests(fit2, adjust.method = "none", p.value = 0.05, lfc = 0)
vennDiagram(results)
summary(results)
volcanoplot(fit2, coef = 1, highlight = 15, names = fit2$genes$SYMBOL, style = "p-value", hl.col = "#006199", xlab = "Log2 Fold Change", ylab = NULL, pch=15, cex=0.35, family = "Bahnschrift")
pdf(paste0(output_dir_standard, paste0("/Differential_Gene_Expression_", experiment_setup, ".pdf")))
plotMD(fit, coef=EXP_column, status=results, hl.col = c( '#DA4948', '#006199'), main = paste0("Differential Gene Expression ", experiment_setup))
dev.off()
has_ggalt <- ! is(try(find.package("ggalt")), "try-error")
topTable <- na.omit(topTable)
topTable$SYMBOL <- make.unique(topTable$SYMBOL)
topTable$GeneName <- topTable$SYMBOL
rownames(topTable) <- topTable$SYMBOL
EVp <- EnhancedVolcano(topTable,
lab = topTable$SYMBOL,
x = 'logFC',
y = 'P.Value',
title = paste0(EXP_column, " vs ", WT_column),
subtitle = 'Differential Gene Expression',
legendPosition = 'Middle',
pCutoff = 0.055,
FCcutoff = 0.8,
pointSize = 3.0,
labSize = 4.0,
ylim = 0.05,
col = c('#D0D5DC', '#60B8AA', '#006199', '#DA4948'),
xlim = c(-5, 5),
titleLabSize = 25) +
theme(
plot.title = element_text(size = 25, hjust = 0.5, family = "Bahnschrift"),
plot.subtitle = element_text(size = 20, hjust = 0.5, family = "Bahnschrift"),
axis.title = element_text(family = "Bahnschrift"),
axis.text = element_text(family = "Bahnschrift"),
legend.title = element_text(family = "Bahnschrift"),
legend.text = element_text(family = "Bahnschrift")
)
EVp
ggsave(paste0(output_dir_standard, "/EnhancedVolcanoPlot_", experiment_setup , ".png"), width = 7, height = 10)
gagedf <- subset(out,select=c(3, 5:ncol(out)))
gagedf <- na.omit(gagedf)
gagedf <- gagedf[!duplicated(gagedf$SYMBOL),]
symbol_translate <- c(gagedf$SYMBOL)
translated_list <- ensembldb::select(hs,
keys = symbol_translate,
columns = c("SYMBOL", "ENTREZID"),
keytype = "SYMBOL")
translated_list %>% distinct(ENTREZID, .keep_all = FALSE)
translated_list <- na.omit(translated_list)
translated_list <- translated_list %>% distinct()
translated_list <- translated_list[!duplicated(translated_list$SYMBOL),]
sum(duplicated(translated_list$SYMBOL))
gagedf_filtered <- merge(gagedf, translated_list, by.x="SYMBOL", by.y="SYMBOL")
rownames(gagedf_filtered) <- gagedf_filtered$ENTREZID
gagedf_filtered <- gagedf_filtered %>% select(-c(SYMBOL, ENTREZID))
m.data <- as.matrix(gagedf_filtered)
head(rownames(m.data))
cn=colnames(m.data)
WT_REF = grep(WT, cn, ignore.case =T)
EXP_REF = grep(EXP, cn, ignore.case =T)
Table.kegg.p <- gage(m.data, gsets = kegg.gs, ref = WT_REF, samp = EXP_REF, compare = "as.group")
Table.go.p <- gage(m.data, gsets = go.gs, ref = WT_REF, compare = "paired")
Table.bp.p <- gage(m.data, gsets = go.bp, ref = WT_REF, samp = EXP_REF)
head(Table.kegg.p$greater[, 1:5], 10)
head(Table.kegg.p$less[, 1:5], 10)
head(Table.kegg.p$stats)
head(Table.go.p$greater[, 1:5], 10)
head(Table.go.p$less[, 1:5], 4)
head(Table.go.p$stats)
head(Table.bp.p$greater[, 1:5], 10)
head(Table.bp.p$less[, 1:5], 10)
head(Table.bp.p$stats)
Tibble.keg <- sigGeneSet(Table.kegg.p, heatmap = TRUE, outname = "GAGE_Results", cutoff = 0.05, qpval = "p.val")
Tibble.keg
write.xlsx(Tibble.keg, paste0(output_dir_gage, "/Differential_Pathways_KEGG.xlsx"), colNames = TRUE, rowNames = TRUE, startCol = 0)
Differential_Pathways <- read.xlsx(paste0(output_dir_gage, "/Differential_Pathways_KEGG.xlsx"))
Differential_Pathways_Down <- read.xlsx(paste0(output_dir_gage, "/Differential_Pathways_KEGG.xlsx"), sheet = 'less')
Differential_Pathways = bind_rows(Differential_Pathways, Differential_Pathways_Down)
names(Differential_Pathways)[1] <- "pathway"
df_pos <- Differential_Pathways %>% filter(stat.mean >= 0)
df_neg <- Differential_Pathways %>% filter(stat.mean < 0)
df_pos$type <- 'positive'
df_neg$type <- 'negative'
df_pos <- df_pos %>% mutate(rank = rank(-stat.mean))
df_neg <- df_neg %>% mutate(rank = rank(stat.mean))
df <- bind_rows(df_pos, df_neg)
df <- df %>%
mutate(pathway = gsub("hsa[0-9]* ", "", pathway))
# Split the dataframe into positive and negative subsets
positive_df <- df %>% filter(stat.mean > 0) %>% arrange(rank)
negative_df <- df %>% filter(stat.mean < 0) %>% arrange(rank)
# Combine positive and negative dataframes
combined_df <- bind_rows(
positive_df %>% mutate(direction = "positive"),
negative_df %>% mutate(direction = "negative")
) %>% mutate(rank = rank - 1)
combined_df <- combined_df %>%
mutate(pathway = case_when(
pathway == "Protein processing in endoplasmic reticulum" ~ "Protein processing in ER",
pathway == "Glycosaminoglycan biosynthesis - chondroitin sulfate" ~ "Glycosaminoglycan biosynthesis",
TRUE ~ pathway
))
combined_df <- combined_df %>%
mutate(significance = case_when(
p.val < 0.005 ~ "**",
p.val < 0.05 ~ "*",
TRUE ~ ""
))
combined_df <- combined_df %>%
left_join(pathway_categories, by = "pathway")
windowsFonts()
nudge_distance <- .6
font = 'Bahnschrift'
label_format <- function(x) {
sapply(x, function(y) if (y < 0) sprintf(" %s", y) else as.character(y))
}
# Create initial plot to determine text range
ggplot(combined_df, aes(x = rank, y = stat.mean, fill = category)) +
geom_bar(data = subset(combined_df, direction == "positive"), aes(y = stat.mean), stat = "identity") +
geom_bar(data = subset(combined_df, direction == "negative"), aes(y = stat.mean), stat = "identity") +
scale_y_continuous(labels = label_format, position = "right", limits = c(-7, 7), breaks = c(-6,-4,-2,0,2,4,6)) +
coord_flip() +
scale_fill_manual(values = category_colors) +  # Remove legend
theme_minimal() +
labs(
title = "WT versus TWEAK",
x = NULL,  # Remove x axis label
y = 'Stat.mean'
) +
theme(
text=element_text(family= font),
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black"),
plot.title = element_text(hjust = 0.5, color = "black", size = 25, face = 'bold'),
panel.grid.major.y = element_blank(),  # Remove horizontal grid lines
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(hjust = 0.5, color = "black", size = 20),
axis.title.y = element_blank(),  # Remove y axis text
axis.line.x.top = element_line(size = 1.5),  # Add x-axis line on top
axis.ticks.x.top = element_line(color = "black", size = 1.5),  # Add x-axis ticks on top
axis.ticks.length = unit(0.3, "cm"),
legend.position = c(0.25, 0.3),  # Position legend using coordinates
legend.background = element_rect(fill = alpha('white', 0.5)), # Adjust tick length if necessary
legend.key.size = unit(1, 'cm'), # Increase the size of the legend keys
legend.title = element_blank(),
legend.text = element_text(size = 13)
) +
geom_text(aes(label = ifelse(direction == "positive", significance, ""), y = stat.mean), hjust = -0.2, color = "black", size = 7) +
geom_text(aes(label = ifelse(direction == "negative", significance, ""), y = stat.mean), hjust = 1.5, color = "black", size = 7) +
scale_x_reverse() +  # Invert the plot vertically
geom_hline(yintercept = 0, color = "black", linetype = "solid", size = 1.5) +
annotate("text", x = combined_df$rank[combined_df$direction == "positive"],
y = combined_df$stat.mean[combined_df$direction == "positive"] + nudge_distance,
label = combined_df$pathway[combined_df$direction == "positive"],
hjust = 0, color = "black", size = 4.5, family = font) +
annotate("text", x = combined_df$rank[combined_df$direction == "negative"],
y = combined_df$stat.mean[combined_df$direction == "negative"] - nudge_distance,
label = combined_df$pathway[combined_df$direction == "negative"],
hjust = 1, color = "black", size = 4.5, family = font)
ggsave(paste0(output_dir_gage, "/GAGEPathwayOverview_", experiment_setup , ".svg"), width = 10, height = 10)
celFiles <- list.celfiles(inputs_dir, full.names=TRUE)
rawData <- read.celfiles(celFiles)
input_dir = "D:/Microarray_Data"
celFiles <- list.celfiles(inputs_dir, full.names=TRUE)
rawData <- read.celfiles(celFiles)
celFiles <- list.celfiles(inputs_dir, full.names=TRUE)
celFiles <- list.celfiles(input_dir, full.names=TRUE)
rawData <- read.celfiles(celFiles)
normData <- oligo::rma(rawData, background = TRUE, normalize = TRUE)
#Helper for matrix design
normData@phenoData@data[["complex"]]
Intuitive_Annotation <- c(1,0,1,0)
factor <- rev(c(Intuitive_Annotation))
design <- model.matrix(~ 0+factor(factor))
colnames(design) <- c(EXP, WT)
EXP_column <- colnames(design)[1]
WT_column <- colnames(design)[2]
#Verify reference chip set is correctly loaded
chipset <- "Clariom.S.Human"
pd.clariom.s.human
#Which genesets to compare to KEGG data needs some wrangling
#GAGE requires ENTREZID and not GENESYMBOL
data(kegg.gs)
kegg.hsa <- kegg.gsets("human")
kegg.gs <- kegg.hsa$kg.sets[kegg.hsa$sigmet.idx]
data(go.gs)
go.hs <- go.gsets(species="human")
go.bp <- go.hs$go.sets[go.hs$go.subs$BP]
hs <- org.Hs.eg.db
#Custom colour schemes because oligo is aweful, feel free to play around/comment out this for easier time. Needs to be at equal to N samples.
custom_colors <- c("#DA4948", "#006199", "#60B8AA", "#B8B2E9")
#Ontology summary colour scheme
category_colors <- c(
"Transcription and Translation" = "#E67844",
"Cell Division, Replication and Repair" = "#006199",
"Energy and Carbohydrate Metabolism" = "#E8CBD0",
"Immune System" = "#2381D0",
"Signaling" = "#B8B2E9",
"Cellular Interactions and Motility" = "#60B8AA",
"Other" = "#D0D5DC",
"Transduction" = "#DA4948"
)
all.eset <- annotateEset(normData, annotation(normData))
dim(all.eset)
pdf(paste0(output_dir_standard, "/LogFC_Samples.pdf"), width = 5, height = 5)
plotMDS(all.eset)
dev.off()
filtered.eset <- getMainProbes(all.eset)
out <- data.frame(fData(filtered.eset), exprs(filtered.eset))
write.xlsx(out, paste0(output_dir_standard, "/Annotated_Array_Data.xlsx"))
#DecideTests
fit <- lmFit(filtered.eset, design)
#Set contrast matrix to appropriate setting. Here we want the differential expression between an experimental condition and WT thus Experiment - WildType
contrast_formula <- paste0(EXP_column, "-", WT_column)
contrast.matrix <- makeContrasts(contrast_formula, levels=design)
fit2 <- contrasts.fit(fit, contrast.matrix)
fit2 <- eBayes(fit2, trend = T, robust = T)
topTable <- topTable(fit2, coef=1, adjust="none", number = 25000)
results <- decideTests(fit2, adjust.method = "none", p.value = 0.05, lfc = 0)
vennDiagram(results)
summary(results)
volcanoplot(fit2, coef = 1, highlight = 15, names = fit2$genes$SYMBOL, style = "p-value", hl.col = "#006199", xlab = "Log2 Fold Change", ylab = NULL, pch=15, cex=0.35, family = "Bahnschrift")
pdf(paste0(output_dir_standard, paste0("/Differential_Gene_Expression_", experiment_setup, ".pdf")))
plotMD(fit, coef=EXP_column, status=results, hl.col = c( '#DA4948', '#006199'), main = paste0("Differential Gene Expression ", experiment_setup))
dev.off()
has_ggalt <- ! is(try(find.package("ggalt")), "try-error")
topTable <- na.omit(topTable)
topTable$SYMBOL <- make.unique(topTable$SYMBOL)
topTable$GeneName <- topTable$SYMBOL
rownames(topTable) <- topTable$SYMBOL
EVp <- EnhancedVolcano(topTable,
lab = topTable$SYMBOL,
x = 'logFC',
y = 'P.Value',
title = paste0(EXP_column, " vs ", WT_column),
subtitle = 'Differential Gene Expression',
legendPosition = 'Middle',
pCutoff = 0.055,
FCcutoff = 0.8,
pointSize = 3.0,
labSize = 4.0,
ylim = 0.05,
col = c('#D0D5DC', '#60B8AA', '#006199', '#DA4948'),
xlim = c(-5, 5),
titleLabSize = 25) +
theme(
plot.title = element_text(size = 25, hjust = 0.5, family = "Bahnschrift"),
plot.subtitle = element_text(size = 20, hjust = 0.5, family = "Bahnschrift"),
axis.title = element_text(family = "Bahnschrift"),
axis.text = element_text(family = "Bahnschrift"),
legend.title = element_text(family = "Bahnschrift"),
legend.text = element_text(family = "Bahnschrift")
)
EVp
ggsave(paste0(output_dir_standard, "/EnhancedVolcanoPlot_", experiment_setup , ".png"), width = 7, height = 10)
gagedf <- subset(out,select=c(3, 5:ncol(out)))
gagedf <- na.omit(gagedf)
gagedf <- gagedf[!duplicated(gagedf$SYMBOL),]
symbol_translate <- c(gagedf$SYMBOL)
translated_list <- ensembldb::select(hs,
keys = symbol_translate,
columns = c("SYMBOL", "ENTREZID"),
keytype = "SYMBOL")
translated_list %>% distinct(ENTREZID, .keep_all = FALSE)
translated_list <- na.omit(translated_list)
translated_list <- translated_list %>% distinct()
translated_list <- translated_list[!duplicated(translated_list$SYMBOL),]
sum(duplicated(translated_list$SYMBOL))
gagedf_filtered <- merge(gagedf, translated_list, by.x="SYMBOL", by.y="SYMBOL")
rownames(gagedf_filtered) <- gagedf_filtered$ENTREZID
gagedf_filtered <- gagedf_filtered %>% select(-c(SYMBOL, ENTREZID))
m.data <- as.matrix(gagedf_filtered)
head(rownames(m.data))
cn=colnames(m.data)
WT_REF = grep(WT, cn, ignore.case =T)
EXP_REF = grep(EXP, cn, ignore.case =T)
Table.kegg.p <- gage(m.data, gsets = kegg.gs, ref = WT_REF, samp = EXP_REF, compare = "as.group")
Table.go.p <- gage(m.data, gsets = go.gs, ref = WT_REF, compare = "paired")
Table.bp.p <- gage(m.data, gsets = go.bp, ref = WT_REF, samp = EXP_REF)
head(Table.kegg.p$greater[, 1:5], 10)
head(Table.kegg.p$less[, 1:5], 10)
head(Table.kegg.p$stats)
head(Table.go.p$greater[, 1:5], 10)
head(Table.go.p$less[, 1:5], 4)
head(Table.go.p$stats)
head(Table.bp.p$greater[, 1:5], 10)
head(Table.bp.p$less[, 1:5], 10)
head(Table.bp.p$stats)
Tibble.keg <- sigGeneSet(Table.kegg.p, heatmap = TRUE, outname = "GAGE_Results", cutoff = 0.05, qpval = "p.val")
Tibble.keg
write.xlsx(Tibble.keg, paste0(output_dir_gage, "/Differential_Pathways_KEGG.xlsx"), colNames = TRUE, rowNames = TRUE, startCol = 0)
Differential_Pathways <- read.xlsx(paste0(output_dir_gage, "/Differential_Pathways_KEGG.xlsx"))
Differential_Pathways_Down <- read.xlsx(paste0(output_dir_gage, "/Differential_Pathways_KEGG.xlsx"), sheet = 'less')
Differential_Pathways = bind_rows(Differential_Pathways, Differential_Pathways_Down)
names(Differential_Pathways)[1] <- "pathway"
df_pos <- Differential_Pathways %>% filter(stat.mean >= 0)
df_neg <- Differential_Pathways %>% filter(stat.mean < 0)
df_pos$type <- 'positive'
df_neg$type <- 'negative'
df_pos <- df_pos %>% mutate(rank = rank(-stat.mean))
df_neg <- df_neg %>% mutate(rank = rank(stat.mean))
df <- bind_rows(df_pos, df_neg)
df <- df %>%
mutate(pathway = gsub("hsa[0-9]* ", "", pathway))
# Split the dataframe into positive and negative subsets
positive_df <- df %>% filter(stat.mean > 0) %>% arrange(rank)
negative_df <- df %>% filter(stat.mean < 0) %>% arrange(rank)
# Combine positive and negative dataframes
combined_df <- bind_rows(
positive_df %>% mutate(direction = "positive"),
negative_df %>% mutate(direction = "negative")
) %>% mutate(rank = rank - 1)
combined_df <- combined_df %>%
mutate(pathway = case_when(
pathway == "Protein processing in endoplasmic reticulum" ~ "Protein processing in ER",
pathway == "Glycosaminoglycan biosynthesis - chondroitin sulfate" ~ "Glycosaminoglycan biosynthesis",
TRUE ~ pathway
))
combined_df <- combined_df %>%
mutate(significance = case_when(
p.val < 0.005 ~ "**",
p.val < 0.05 ~ "*",
TRUE ~ ""
))
combined_df <- combined_df %>%
left_join(pathway_categories, by = "pathway")
windowsFonts()
nudge_distance <- .6
font = 'Bahnschrift'
label_format <- function(x) {
sapply(x, function(y) if (y < 0) sprintf(" %s", y) else as.character(y))
}
# Create initial plot to determine text range
ggplot(combined_df, aes(x = rank, y = stat.mean, fill = category)) +
geom_bar(data = subset(combined_df, direction == "positive"), aes(y = stat.mean), stat = "identity") +
geom_bar(data = subset(combined_df, direction == "negative"), aes(y = stat.mean), stat = "identity") +
scale_y_continuous(labels = label_format, position = "right", limits = c(-7, 7), breaks = c(-6,-4,-2,0,2,4,6)) +
coord_flip() +
scale_fill_manual(values = category_colors) +  # Remove legend
theme_minimal() +
labs(
title = "WT versus TWEAK",
x = NULL,  # Remove x axis label
y = 'Stat.mean'
) +
theme(
text=element_text(family= font),
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black"),
plot.title = element_text(hjust = 0.5, color = "black", size = 25, face = 'bold'),
panel.grid.major.y = element_blank(),  # Remove horizontal grid lines
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(hjust = 0.5, color = "black", size = 20),
axis.title.y = element_blank(),  # Remove y axis text
axis.line.x.top = element_line(size = 1.5),  # Add x-axis line on top
axis.ticks.x.top = element_line(color = "black", size = 1.5),  # Add x-axis ticks on top
axis.ticks.length = unit(0.3, "cm"),
legend.position = c(0.25, 0.3),  # Position legend using coordinates
legend.background = element_rect(fill = alpha('white', 0.5)), # Adjust tick length if necessary
legend.key.size = unit(1, 'cm'), # Increase the size of the legend keys
legend.title = element_blank(),
legend.text = element_text(size = 13)
) +
geom_text(aes(label = ifelse(direction == "positive", significance, ""), y = stat.mean), hjust = -0.2, color = "black", size = 7) +
geom_text(aes(label = ifelse(direction == "negative", significance, ""), y = stat.mean), hjust = 1.5, color = "black", size = 7) +
scale_x_reverse() +  # Invert the plot vertically
geom_hline(yintercept = 0, color = "black", linetype = "solid", size = 1.5) +
annotate("text", x = combined_df$rank[combined_df$direction == "positive"],
y = combined_df$stat.mean[combined_df$direction == "positive"] + nudge_distance,
label = combined_df$pathway[combined_df$direction == "positive"],
hjust = 0, color = "black", size = 4.5, family = font) +
annotate("text", x = combined_df$rank[combined_df$direction == "negative"],
y = combined_df$stat.mean[combined_df$direction == "negative"] - nudge_distance,
label = combined_df$pathway[combined_df$direction == "negative"],
hjust = 1, color = "black", size = 4.5, family = font)
ggsave(paste0(output_dir_gage, "/GAGEPathwayOverview_", experiment_setup , ".svg"), width = 10, height = 10)
View(combined_df)
View(df)
translated_list <- biomaRt::select(hs,
keys = symbol_translate,
columns = c("SYMBOL", "ENTREZID"),
keytype = "SYMBOL")
gagedf <- subset(out,select=c(3, 5:ncol(out)))
gagedf <- na.omit(gagedf)
gagedf <- gagedf[!duplicated(gagedf$SYMBOL),]
symbol_translate <- c(gagedf$SYMBOL)
translated_list <- biomaRt::select(hs,
keys = symbol_translate,
columns = c("SYMBOL", "ENTREZID"),
keytype = "SYMBOL")
translated_list %>% distinct(ENTREZID, .keep_all = FALSE)
translated_list <- na.omit(translated_list)
translated_list <- translated_list %>% distinct()
translated_list <- translated_list[!duplicated(translated_list$SYMBOL),]
sum(duplicated(translated_list$SYMBOL))
gagedf_filtered <- merge(gagedf, translated_list, by.x="SYMBOL", by.y="SYMBOL")
rownames(gagedf_filtered) <- gagedf_filtered$ENTREZID
gagedf_filtered <- gagedf_filtered %>% select(-c(SYMBOL, ENTREZID))
m.data <- as.matrix(gagedf_filtered)
head(rownames(m.data))
cn=colnames(m.data)
WT_REF = grep(WT, cn, ignore.case =T)
EXP_REF = grep(EXP, cn, ignore.case =T)
Table.kegg.p <- gage(m.data, gsets = kegg.gs, ref = WT_REF, samp = EXP_REF, compare = "as.group")
Table.go.p <- gage(m.data, gsets = go.gs, ref = WT_REF, compare = "paired")
Table.bp.p <- gage(m.data, gsets = go.bp, ref = WT_REF, samp = EXP_REF)
head(Table.kegg.p$greater[, 1:5], 10)
head(Table.kegg.p$less[, 1:5], 10)
head(Table.kegg.p$stats)
head(Table.go.p$greater[, 1:5], 10)
head(Table.go.p$less[, 1:5], 4)
head(Table.go.p$stats)
head(Table.bp.p$greater[, 1:5], 10)
head(Table.bp.p$less[, 1:5], 10)
head(Table.bp.p$stats)
Tibble.keg <- sigGeneSet(Table.kegg.p, heatmap = TRUE, outname = "GAGE_Results", cutoff = 0.05, qpval = "p.val")
Tibble.keg
write.xlsx(Tibble.keg, paste0(output_dir_gage, "/Differential_Pathways_KEGG.xlsx"), colNames = TRUE, rowNames = TRUE, startCol = 0)
Differential_Pathways <- read.xlsx(paste0(output_dir_gage, "/Differential_Pathways_KEGG.xlsx"))
Differential_Pathways_Down <- read.xlsx(paste0(output_dir_gage, "/Differential_Pathways_KEGG.xlsx"), sheet = 'less')
Differential_Pathways = bind_rows(Differential_Pathways, Differential_Pathways_Down)
names(Differential_Pathways)[1] <- "pathway"
df_pos <- Differential_Pathways %>% filter(stat.mean >= 0)
df_neg <- Differential_Pathways %>% filter(stat.mean < 0)
df_pos$type <- 'positive'
df_neg$type <- 'negative'
df_pos <- df_pos %>% mutate(rank = rank(-stat.mean))
df_neg <- df_neg %>% mutate(rank = rank(stat.mean))
df <- bind_rows(df_pos, df_neg)
df <- df %>%
mutate(pathway = gsub("hsa[0-9]* ", "", pathway))
# Split the dataframe into positive and negative subsets
positive_df <- df %>% filter(stat.mean > 0) %>% arrange(rank)
negative_df <- df %>% filter(stat.mean < 0) %>% arrange(rank)
# Combine positive and negative dataframes
combined_df <- bind_rows(
positive_df %>% mutate(direction = "positive"),
negative_df %>% mutate(direction = "negative")
) %>% mutate(rank = rank - 1)
combined_df <- combined_df %>%
mutate(pathway = case_when(
pathway == "Protein processing in endoplasmic reticulum" ~ "Protein processing in ER",
pathway == "Glycosaminoglycan biosynthesis - chondroitin sulfate" ~ "Glycosaminoglycan biosynthesis",
TRUE ~ pathway
))
combined_df <- combined_df %>%
mutate(significance = case_when(
p.val < 0.005 ~ "**",
p.val < 0.05 ~ "*",
TRUE ~ ""
))
combined_df <- combined_df %>%
left_join(pathway_categories, by = "pathway")
windowsFonts()
nudge_distance <- .6
font = 'Bahnschrift'
label_format <- function(x) {
sapply(x, function(y) if (y < 0) sprintf(" %s", y) else as.character(y))
}
# Create initial plot to determine text range
ggplot(combined_df, aes(x = rank, y = stat.mean, fill = category)) +
geom_bar(data = subset(combined_df, direction == "positive"), aes(y = stat.mean), stat = "identity") +
geom_bar(data = subset(combined_df, direction == "negative"), aes(y = stat.mean), stat = "identity") +
scale_y_continuous(labels = label_format, position = "right", limits = c(-7, 7), breaks = c(-6,-4,-2,0,2,4,6)) +
coord_flip() +
scale_fill_manual(values = category_colors) +  # Remove legend
theme_minimal() +
labs(
title = "WT versus TWEAK",
x = NULL,  # Remove x axis label
y = 'Stat.mean'
) +
theme(
text=element_text(family= font),
axis.text.y = element_blank(),
axis.text.x = element_text(color = "black"),
plot.title = element_text(hjust = 0.5, color = "black", size = 25, face = 'bold'),
panel.grid.major.y = element_blank(),  # Remove horizontal grid lines
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.x = element_text(hjust = 0.5, color = "black", size = 20),
axis.title.y = element_blank(),  # Remove y axis text
axis.line.x.top = element_line(size = 1.5),  # Add x-axis line on top
axis.ticks.x.top = element_line(color = "black", size = 1.5),  # Add x-axis ticks on top
axis.ticks.length = unit(0.3, "cm"),
legend.position = c(0.25, 0.3),  # Position legend using coordinates
legend.background = element_rect(fill = alpha('white', 0.5)), # Adjust tick length if necessary
legend.key.size = unit(1, 'cm'), # Increase the size of the legend keys
legend.title = element_blank(),
legend.text = element_text(size = 13)
) +
geom_text(aes(label = ifelse(direction == "positive", significance, ""), y = stat.mean), hjust = -0.2, color = "black", size = 7) +
geom_text(aes(label = ifelse(direction == "negative", significance, ""), y = stat.mean), hjust = 1.5, color = "black", size = 7) +
scale_x_reverse() +  # Invert the plot vertically
geom_hline(yintercept = 0, color = "black", linetype = "solid", size = 1.5) +
annotate("text", x = combined_df$rank[combined_df$direction == "positive"],
y = combined_df$stat.mean[combined_df$direction == "positive"] + nudge_distance,
label = combined_df$pathway[combined_df$direction == "positive"],
hjust = 0, color = "black", size = 4.5, family = font) +
annotate("text", x = combined_df$rank[combined_df$direction == "negative"],
y = combined_df$stat.mean[combined_df$direction == "negative"] - nudge_distance,
label = combined_df$pathway[combined_df$direction == "negative"],
hjust = 1, color = "black", size = 4.5, family = font)
ggsave(paste0(output_dir_gage, "/GAGEPathwayOverview_", experiment_setup , ".svg"), width = 10, height = 10)
View(combined_df)
BiocManager::install("gage")
BiocManager::install("gage")
